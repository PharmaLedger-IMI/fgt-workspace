import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
var Badge = /** @class */ (function (_super) {
    __extends(Badge, _super);
    function Badge() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Badge.prototype.clear = function () { return cordova(this, "clear", {}, arguments); };
    Badge.prototype.set = function (badgeNumber) { return cordova(this, "set", {}, arguments); };
    Badge.prototype.get = function () { return cordova(this, "get", {}, arguments); };
    Badge.prototype.increase = function (increaseBy) { return cordova(this, "increase", {}, arguments); };
    Badge.prototype.decrease = function (decreaseBy) { return cordova(this, "decrease", {}, arguments); };
    Badge.prototype.isSupported = function () { return cordova(this, "isSupported", {}, arguments); };
    Badge.prototype.hasPermission = function () { return cordova(this, "hasPermission", {}, arguments); };
    Badge.prototype.requestPermission = function () { return cordova(this, "requestPermission", {}, arguments); };
    Badge.pluginName = "Badge";
    Badge.plugin = "cordova-plugin-badge";
    Badge.pluginRef = "cordova.plugins.notification.badge";
    Badge.repo = "https://github.com/katzer/cordova-plugin-badge";
    Badge.platforms = ["Android", "Browser", "iOS", "Windows"];
    Badge.decorators = [
        { type: Injectable }
    ];
    return Badge;
}(IonicNativePlugin));
export { Badge };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQGlvbmljLW5hdGl2ZS9wbHVnaW5zL2JhZGdlL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDOztJQWlDN0MseUJBQWlCOzs7O0lBTTFDLHFCQUFLO0lBVUwsbUJBQUcsYUFBQyxXQUFtQjtJQVN2QixtQkFBRztJQVVILHdCQUFRLGFBQUMsVUFBa0I7SUFVM0Isd0JBQVEsYUFBQyxVQUFrQjtJQVMzQiwyQkFBVztJQVNYLDZCQUFhO0lBU2IsaUNBQWlCOzs7Ozs7O2dCQXpFbEIsVUFBVTs7Z0JBakNYO0VBa0MyQixpQkFBaUI7U0FBL0IsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuXG4vKipcbiAqIEBuYW1lIEJhZGdlXG4gKiBAcHJlbWllciBiYWRnZVxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgZXNzZW50aWFsIHB1cnBvc2Ugb2YgYmFkZ2UgbnVtYmVycyBpcyB0byBlbmFibGUgYW4gYXBwbGljYXRpb24gdG8gaW5mb3JtIGl0cyB1c2VycyB0aGF0IGl0IGhhcyBzb21ldGhpbmcgZm9yIHRoZW0g4oCUIGZvciBleGFtcGxlLCB1bnJlYWQgbWVzc2FnZXMg4oCUIHdoZW4gdGhlIGFwcGxpY2F0aW9uIGlzbuKAmXQgcnVubmluZyBpbiB0aGUgZm9yZWdyb3VuZC5cbiAqXG4gKiBSZXF1aXJlcyBDb3Jkb3ZhIHBsdWdpbjogY29yZG92YS1wbHVnaW4tYmFkZ2UuIEZvciBtb3JlIGluZm8sIHBsZWFzZSBzZWUgdGhlIFtCYWRnZSBwbHVnaW4gZG9jc10oaHR0cHM6Ly9naXRodWIuY29tL2thdHplci9jb3Jkb3ZhLXBsdWdpbi1iYWRnZSkuXG4gKlxuICogQW5kcm9pZCBOb3RlOiBCYWRnZXMgaGF2ZSBoaXN0b3JpY2FsbHkgb25seSBiZWVuIGEgZmVhdHVyZSBpbXBsZW1lbnRlZCBieSB0aGlyZCBwYXJ0eSBsYXVuY2hlcnMgYW5kIG5vdCB2aXNpYmxlIHVubGVzcyBvbmUgb2YgdGhvc2UgbGF1bmNoZXJzIHdhcyBiZWluZyB1c2VkIChFLkcuIFNhbXN1bmcgb3IgTm92YSBMYXVuY2hlcikgYW5kIGlmIGVuYWJsZWQgYnkgdGhlIHVzZXIuIEFzIG9mIEFuZHJvaWQgOCAoT3JlbyksIFtub3RpZmljYXRpb24gYmFkZ2VzXShodHRwczovL2RldmVsb3Blci5hbmRyb2lkLmNvbS90cmFpbmluZy9ub3RpZnktdXNlci9iYWRnZXMpIHdlcmUgaW50cm9kdWNlZCBvZmZpY2lhbGx5IHRvIHJlZmxlY3QgdW5yZWFkIG5vdGlmaWNhdGlvbnMuIFRoaXMgcGx1Z2luIGlzIHVubGlrZWx5IHRvIHdvcmsgYXMgZXhwZWN0ZWQgb24gZGV2aWNlcyBydW5uaW5nIEFuZHJvaWQgOCBvciBuZXdlci4gUGxlYXNlIHNlZSB0aGUgW2xvY2FsIG5vdGlmaWNhdGlvbnMgcGx1Z2luIGRvY3NdKGh0dHBzOi8vZ2l0aHViLmNvbS9rYXR6ZXIvY29yZG92YS1wbHVnaW4tbG9jYWwtbm90aWZpY2F0aW9ucykgZm9yIG1vcmUgaW5mb3JtYXRpb24gb24gYmFkZ2UgdXNlIHdpdGggbm90aWZpY2F0aW9ucy5cbiAqXG4gKiBAdXNhZ2VcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEJhZGdlIH0gZnJvbSAnQGlvbmljLW5hdGl2ZS9iYWRnZS9uZ3gnO1xuICpcbiAqIGNvbnN0cnVjdG9yKHByaXZhdGUgYmFkZ2U6IEJhZGdlKSB7IH1cbiAqXG4gKiAuLi5cbiAqXG4gKiB0aGlzLmJhZGdlLnNldCgxMCk7XG4gKiB0aGlzLmJhZGdlLmluY3JlYXNlKDEpO1xuICogdGhpcy5iYWRnZS5jbGVhcigpO1xuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnQmFkZ2UnLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1iYWRnZScsXG4gIHBsdWdpblJlZjogJ2NvcmRvdmEucGx1Z2lucy5ub3RpZmljYXRpb24uYmFkZ2UnLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL2thdHplci9jb3Jkb3ZhLXBsdWdpbi1iYWRnZScsXG4gIHBsYXRmb3JtczogWydBbmRyb2lkJywgJ0Jyb3dzZXInLCAnaU9TJywgJ1dpbmRvd3MnXSxcbn0pXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQmFkZ2UgZXh0ZW5kcyBJb25pY05hdGl2ZVBsdWdpbiB7XG4gIC8qKlxuICAgKiBDbGVhciB0aGUgYmFkZ2Ugb2YgdGhlIGFwcCBpY29uLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxib29sZWFuPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgY2xlYXIoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFNldCB0aGUgYmFkZ2Ugb2YgdGhlIGFwcCBpY29uLlxuICAgKiBAcGFyYW0ge251bWJlcn0gYmFkZ2VOdW1iZXIgIFRoZSBuZXcgYmFkZ2UgbnVtYmVyLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBzZXQoYmFkZ2VOdW1iZXI6IG51bWJlcik6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCB0aGUgYmFkZ2Ugb2YgdGhlIGFwcCBpY29uLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBnZXQoKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogSW5jcmVhc2UgdGhlIGJhZGdlIG51bWJlci5cbiAgICogQHBhcmFtIHtudW1iZXJ9IGluY3JlYXNlQnkgIENvdW50IHRvIGFkZCB0byB0aGUgY3VycmVudCBiYWRnZSBudW1iZXJcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaW5jcmVhc2UoaW5jcmVhc2VCeTogbnVtYmVyKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogRGVjcmVhc2UgdGhlIGJhZGdlIG51bWJlci5cbiAgICogQHBhcmFtIHtudW1iZXJ9IGRlY3JlYXNlQnkgIENvdW50IHRvIHN1YnRyYWN0IGZyb20gdGhlIGN1cnJlbnQgYmFkZ2UgbnVtYmVyXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGRlY3JlYXNlKGRlY3JlYXNlQnk6IG51bWJlcik6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIENoZWNrIHN1cHBvcnQgdG8gc2hvdyBiYWRnZXMuXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPGFueT59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIGlzU3VwcG9ydGVkKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIERldGVybWluZSBpZiB0aGUgYXBwIGhhcyBwZXJtaXNzaW9uIHRvIHNob3cgYmFkZ2VzLlxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxhbnk+fVxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBoYXNQZXJtaXNzaW9uKCk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFJlZ2lzdGVyIHBlcm1pc3Npb24gdG8gc2V0IGJhZGdlIG5vdGlmaWNhdGlvbnNcbiAgICogQHJldHVybnMge1Byb21pc2U8YW55Pn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgcmVxdWVzdFBlcm1pc3Npb24oKTogUHJvbWlzZTxhbnk+IHtcbiAgICByZXR1cm47XG4gIH1cbn1cbiJdfQ==