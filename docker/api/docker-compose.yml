version: "2.3"
x-participant-def:
  &participant-def
  restart: "unless-stopped"
  # Uncomment build+context to build from git master. 
  # Uncomment image to use pre-built image. See also fgt-workspace below (which may share the same image).
  build:
    context: ../api
  #image: joaoluispdm/pharmaledger-imi-fgt:v0.9.6
  healthcheck:
    test: [ "CMD", "curl", "--fail", "http://localhost:3009" ] # looks for the swagger instance, the last thing to boot
    interval: 20s
    timeout: 3s
    retries: 100
    start_period: 40s
  command: ["/bin/sh", "-c", "/fgt-workspace/docker/api/startup-script.sh"]
  # the command above is not for the tracebility apihub, so it must be overridden on fgt-workspace.
x-mah-def:
  &mah-def
  << : *participant-def
  depends_on:
    fgt-workspace:
      condition: service_healthy
x-whs-def:
  &whs-def
  << : *participant-def
  depends_on:
    mah-roche:
      condition: service_healthy
    mah-bayer:
      condition: service_healthy
    mah-gsk:
      condition: service_healthy
    mah-msd:
      condition: service_healthy
    mah-novo-nordisk:
      condition: service_healthy
    mah-pfizer:
      condition: service_healthy
    mah-takeda:
      condition: service_healthy
    mah-sanofi:
      condition: service_healthy
x-pha-def:
  &pha-def
  << : *participant-def
  depends_on:
    whs-takeda :
      condition: service_healthy
    whs-1:
      condition: service_healthy
    whs-2:
      condition: service_healthy
services:
  traefik:
    image: "traefik:v2.6"
    container_name: "traefik"
    restart: "unless-stopped"
    command:
      - "--log.level=DEBUG"
      - "--log.filePath=/var/log/traefik/traefik.log"
      - "--api.insecure=false"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/log/traefik:/var/log/traefik:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`${SIMPLE}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard.service=api@internal"
    ports:
      - "8080:8080"
    networks:
      - traceability-net

  logrotate:
    image: vegardit/traefik-logrotate:latest
    container_name: "traefik-logrotate"
    restart: "unless-stopped"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw # required to send USR1 signal to Traefik after log rotation
      - /var/log/traefik:/var/log/traefik:rw # folder containing access.log file
    environment:
      TZ: "Europe/Lisbon"
      # all environment variables are optional and show the default values:
      LOGROTATE_LOGS: "/var/log/traefik/*.log"    # log files to rotate, directory must match volume mount
      LOGROTATE_TRIGGER_INTERVAL: daily           # rotate daily, must be one of: daily, weekly, monthly, yearly
      LOGROTATE_TRIGGER_SIZE: 50M                 # rotate if log file size reaches 50MB
      LOGROTATE_MAX_BACKUPS: 14                   # keep 14 backup copies per rotated log file
      LOGROTATE_START_INDEX: 1                    # first rotated file is called access.1.log
      CRON_SCHEDULE: "* * * * *"
      CRON_LOG_LEVEL: 8                           # see https://unix.stackexchange.com/a/414010/378036
      # command to determine the id of the container running Traefik:
      TRAEFIK_CONTAINER_ID_COMMAND: docker ps --quiet --filter ancestor=traefik

  fgt-workspace:
    container_name: fgt-workspace
    # Uncomment build+context to build from git master.
    # Uncomment image to use pre-built image. Should be kept consistent with x-participant-def above.
    build:
      context: ../api/traceability
      # The file at ../api/traceability/Dockerfile should be identical to the one at ../api/Dockerfile
      # except to the traceability domain does not expose ports for the REST api, and neither Swagger.
      # The config files are handled by distincat startup-script.sh.
    #image: joaoluispdm/pharmaledger-imi-fgt:v0.9.6
    hostname: fgt-workspace
    restart: "unless-stopped"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traceability.rule=Host(`traceability${DOMAIN}`) || Host(`${SIMPLE}`)"
      - "traefik.http.middlewares.traceability-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.traceability-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.traceability-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.traceability-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.traceability-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.traceability.middlewares=traceability-headers"
      - "traefik.http.services.traceability.loadbalancer.server.port=8080"
      - "traefik.http.routers.traceability.entrypoints=web"
      - "traefik.docker.network=traceability-net"
      # this docker can also have an IP address in dsu-bc-net, so tell traefik to use the traceability-net
    volumes:
      - traceability_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.51
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080"]
      interval: 15s
      timeout: 3s
      retries: 100
      start_period: 20s
    command: ["/bin/sh", "-c", "/fgt-workspace/docker/api/traceability/startup-script.sh"]

  mah-roche:
    << : *mah-def
    container_name: mah-roche
    hostname: mah-roche
    environment:
      ROLE: mah
      FGT_API_CREDENTIALS: "{\"name\":{\"secret\":\"Roche AG\",\"public\":true},\"id\":{\"secret\":\"MAH0000000\",\"public\":true},\"email\":{\"secret\":\"roche@mah.pharmaledger.com\",\"public\":true},\"address\":{\"public\":true,\"secret\":\" k Switzerland\"},\"pass\":{\"secret\":\"This1sSuchAS3curePassw0rd\"},\"passrepeat\":{\"secret\":\"This1sSuchAS3curePassw0rd\"}}"
      CREDENTIALS_FILE: mah-roche.json
      SWAGGER_SERVER: ${PROTOCOL}://api-mah-roche${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mah-roche.rule=Host(`mah-roche${DOMAIN}`)"
      - "traefik.http.middlewares.mah-roche-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.mah-roche-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.mah-roche-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.mah-roche-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.mah-roche-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.mah-roche.middlewares=mah-roche-headers"
      - "traefik.http.routers.mah-roche.entrypoints=web"
      - "traefik.http.routers.mah-roche.service=mah-roche"
      - "traefik.http.services.mah-roche.loadbalancer.server.port=8080"

      - "traefik.http.routers.mah-roche-swagger.rule=Host(`swagger-mah-roche${DOMAIN}`)"
      - "traefik.http.routers.mah-roche-swagger.entrypoints=web"
      - "traefik.http.routers.mah-roche-swagger.service=mah-roche-swagger"
      - "traefik.http.services.mah-roche-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.mah-roche-api.rule=Host(`api-mah-roche${DOMAIN}`)"
      - "traefik.http.routers.mah-roche-api.entrypoints=web"
      - "traefik.http.routers.mah-roche-api.service=mah-roche-api"
      - "traefik.http.services.mah-roche-api.loadbalancer.server.port=8081"
    volumes:
      - mah-roche_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.61
  mah-bayer:
    <<: *mah-def
    container_name: mah-bayer
    hostname: mah-bayer
    environment:
      ROLE: mah
      CREDENTIALS_FILE: mah-bayer.json
      SWAGGER_SERVER: ${PROTOCOL}://api-mah-bayer${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mah-bayer.rule=Host(`mah-bayer${DOMAIN}`)"
      - "traefik.http.middlewares.mah-bayer-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.mah-bayer-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.mah-bayer-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.mah-bayer-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.mah-bayer-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.mah-bayer.middlewares=mah-bayer-headers"
      - "traefik.http.routers.mah-bayer.entrypoints=web"
      - "traefik.http.routers.mah-bayer.service=mah-bayer"
      - "traefik.http.services.mah-bayer.loadbalancer.server.port=8080"

      - "traefik.http.routers.mah-bayer-swagger.rule=Host(`swagger-mah-bayer${DOMAIN}`)"
      - "traefik.http.routers.mah-bayer-swagger.entrypoints=web"
      - "traefik.http.routers.mah-bayer-swagger.service=mah-bayer-swagger"
      - "traefik.http.services.mah-bayer-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.mah-bayer-api.rule=Host(`api-mah-bayer${DOMAIN}`)"
      - "traefik.http.routers.mah-bayer-api.entrypoints=web"
      - "traefik.http.routers.mah-bayer-api.service=mah-bayer-api"
      - "traefik.http.services.mah-bayer-api.loadbalancer.server.port=8081"
    volumes:
      - mah-bayer_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.62
  mah-gsk:
    <<: *mah-def
    container_name: mah-gsk
    hostname: mah-gsk
    environment:
      ROLE: mah
      CREDENTIALS_FILE: mah-gsk.json
      SWAGGER_SERVER: ${PROTOCOL}://api-mah-gsk${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mah-gsk.rule=Host(`mah-gsk${DOMAIN}`)"
      - "traefik.http.middlewares.mah-gsk-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.mah-gsk-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.mah-gsk-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.mah-gsk-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.mah-gsk-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.mah-gsk.middlewares=mah-gsk-headers"
      - "traefik.http.routers.mah-gsk.entrypoints=web"
      - "traefik.http.routers.mah-gsk.service=mah-gsk"
      - "traefik.http.services.mah-gsk.loadbalancer.server.port=8080"

      - "traefik.http.routers.mah-gsk-swagger.rule=Host(`swagger-mah-gsk${DOMAIN}`)"
      - "traefik.http.routers.mah-gsk-swagger.entrypoints=web"
      - "traefik.http.routers.mah-gsk-swagger.service=mah-gsk-swagger"
      - "traefik.http.services.mah-gsk-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.mah-gsk-api.rule=Host(`api-mah-gsk${DOMAIN}`)"
      - "traefik.http.routers.mah-gsk-api.entrypoints=web"
      - "traefik.http.routers.mah-gsk-api.service=mah-gsk-api"
      - "traefik.http.services.mah-gsk-api.loadbalancer.server.port=8081"
    volumes:
      - mah-gsk_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.63
  mah-msd:
    <<: *mah-def
    container_name: mah-msd
    hostname: mah-msd
    environment:
      ROLE: mah
      CREDENTIALS_FILE: mah-msd.json
      SWAGGER_SERVER: ${PROTOCOL}://api-mah-msd${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mah-msd.rule=Host(`mah-msd${DOMAIN}`)"
      - "traefik.http.middlewares.mah-msd-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.mah-msd-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.mah-msd-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.mah-msd-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.mah-msd-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.mah-msd.middlewares=mah-msd-headers"
      - "traefik.http.routers.mah-msd.entrypoints=web"
      - "traefik.http.routers.mah-msd.service=mah-msd"
      - "traefik.http.services.mah-msd.loadbalancer.server.port=8080"

      - "traefik.http.routers.mah-msd-swagger.rule=Host(`swagger-mah-msd${DOMAIN}`)"
      - "traefik.http.routers.mah-msd-swagger.entrypoints=web"
      - "traefik.http.routers.mah-msd-swagger.service=mah-msd-swagger"
      - "traefik.http.services.mah-msd-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.mah-msd-api.rule=Host(`api-mah-msd${DOMAIN}`)"
      - "traefik.http.routers.mah-msd-api.entrypoints=web"
      - "traefik.http.routers.mah-msd-api.service=mah-msd-api"
      - "traefik.http.services.mah-msd-api.loadbalancer.server.port=8081"
    volumes:
      - mah-msd_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.64
  mah-novo-nordisk:
    <<: *mah-def
    container_name: mah-novo-nordisk
    hostname: mah-novo-nordisk
    environment:
      ROLE: mah
      CREDENTIALS_FILE: mah-novo-nordisk.json
      SWAGGER_SERVER: ${PROTOCOL}://api-mah-novo-nordisk${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mah-novo-nordisk.rule=Host(`mah-novo-nordisk${DOMAIN}`)"
      - "traefik.http.middlewares.mah-novo-nordisk-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.mah-novo-nordisk-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.mah-novo-nordisk-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.mah-novo-nordisk-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.mah-novo-nordisk-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.mah-novo-nordisk.middlewares=mah-novo-nordisk-headers"
      - "traefik.http.routers.mah-novo-nordisk.entrypoints=web"
      - "traefik.http.routers.mah-novo-nordisk.service=mah-novo-nordisk"
      - "traefik.http.services.mah-novo-nordisk.loadbalancer.server.port=8080"

      - "traefik.http.routers.mah-novo-nordisk-swagger.rule=Host(`swagger-mah-novo-nordisk${DOMAIN}`)"
      - "traefik.http.routers.mah-novo-nordisk-swagger.entrypoints=web"
      - "traefik.http.routers.mah-novo-nordisk-swagger.service=mah-novo-nordisk-swagger"
      - "traefik.http.services.mah-novo-nordisk-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.mah-novo-nordisk-api.rule=Host(`api-mah-novo-nordisk${DOMAIN}`)"
      - "traefik.http.routers.mah-novo-nordisk-api.entrypoints=web"
      - "traefik.http.routers.mah-novo-nordisk-api.service=mah-novo-nordisk-api"
      - "traefik.http.services.mah-novo-nordisk-api.loadbalancer.server.port=8081"
    volumes:
      - mah-novo-nordisk_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.65
  mah-pfizer:
    <<: *mah-def
    container_name: mah-pfizer
    hostname: mah-pfizer
    environment:
      ROLE: mah
      CREDENTIALS_FILE: mah-pfizer.json
      SWAGGER_SERVER: ${PROTOCOL}://api-mah-pfizer${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mah-pfizer.rule=Host(`mah-pfizer${DOMAIN}`)"
      - "traefik.http.middlewares.mah-pfizer-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.mah-pfizer-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.mah-pfizer-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.mah-pfizer-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.mah-pfizer-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.mah-pfizer.middlewares=mah-pfizer-headers"
      - "traefik.http.routers.mah-pfizer.entrypoints=web"
      - "traefik.http.routers.mah-pfizer.service=mah-pfizer"
      - "traefik.http.services.mah-pfizer.loadbalancer.server.port=8080"

      - "traefik.http.routers.mah-pfizer-swagger.rule=Host(`swagger-mah-pfizer${DOMAIN}`)"
      - "traefik.http.routers.mah-pfizer-swagger.entrypoints=web"
      - "traefik.http.routers.mah-pfizer-swagger.service=mah-pfizer-swagger"
      - "traefik.http.services.mah-pfizer-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.mah-pfizer-api.rule=Host(`api-mah-pfizer${DOMAIN}`)"
      - "traefik.http.routers.mah-pfizer-api.entrypoints=web"
      - "traefik.http.routers.mah-pfizer-api.service=mah-pfizer-api"
      - "traefik.http.services.mah-pfizer-api.loadbalancer.server.port=8081"
    volumes:
      - mah-pfizer_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.66
  mah-takeda:
    <<: *mah-def
    container_name: mah-takeda
    hostname: mah-takeda
    environment:
      ROLE: mah
      CREDENTIALS_FILE: mah-takeda.json
      SWAGGER_SERVER: ${PROTOCOL}://api-mah-takeda${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mah-takeda.rule=Host(`mah-takeda${DOMAIN}`)"
      - "traefik.http.middlewares.mah-takeda-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.mah-takeda-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.mah-takeda-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.mah-takeda-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.mah-takeda-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.mah-takeda.middlewares=mah-takeda-headers"
      - "traefik.http.routers.mah-takeda.entrypoints=web"
      - "traefik.http.routers.mah-takeda.service=mah-takeda"
      - "traefik.http.services.mah-takeda.loadbalancer.server.port=8080"

      - "traefik.http.routers.mah-takeda-swagger.rule=Host(`swagger-mah-takeda${DOMAIN}`)"
      - "traefik.http.routers.mah-takeda-swagger.entrypoints=web"
      - "traefik.http.routers.mah-takeda-swagger.service=mah-takeda-swagger"
      - "traefik.http.services.mah-takeda-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.mah-takeda-api.rule=Host(`api-mah-takeda${DOMAIN}`)"
      - "traefik.http.routers.mah-takeda-api.entrypoints=web"
      - "traefik.http.routers.mah-takeda-api.service=mah-takeda-api"
      - "traefik.http.services.mah-takeda-api.loadbalancer.server.port=8081"
    volumes:
      - mah-takeda_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.67
  mah-sanofi:
    <<: *mah-def
    container_name: mah-sanofi
    hostname: mah-sanofi
    environment:
      ROLE: mah
      CREDENTIALS_FILE: mah-sanofi.json
      SWAGGER_SERVER: ${PROTOCOL}://api-mah-sanofi${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mah-sanofi.rule=Host(`mah-sanofi${DOMAIN}`)"
      - "traefik.http.middlewares.mah-sanofi-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.mah-sanofi-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.mah-sanofi-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.mah-sanofi-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.mah-sanofi-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.mah-sanofi.middlewares=mah-sanofi-headers"
      - "traefik.http.routers.mah-sanofi.entrypoints=web"
      - "traefik.http.routers.mah-sanofi.service=mah-sanofi"
      - "traefik.http.services.mah-sanofi.loadbalancer.server.port=8080"

      - "traefik.http.routers.mah-sanofi-swagger.rule=Host(`swagger-mah-sanofi${DOMAIN}`)"
      - "traefik.http.routers.mah-sanofi-swagger.entrypoints=web"
      - "traefik.http.routers.mah-sanofi-swagger.service=mah-sanofi-swagger"
      - "traefik.http.services.mah-sanofi-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.mah-sanofi-api.rule=Host(`api-mah-sanofi${DOMAIN}`)"
      - "traefik.http.routers.mah-sanofi-api.entrypoints=web"
      - "traefik.http.routers.mah-sanofi-api.service=mah-sanofi-api"
      - "traefik.http.services.mah-sanofi-api.loadbalancer.server.port=8081"
    volumes:
      - mah-sanofi_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.68

  whs-1:
    << : *whs-def
    container_name: whs1
    hostname: whs1
    environment:
      ROLE: whs
      CREDENTIALS_FILE: whs-1.json
      SWAGGER_SERVER: ${PROTOCOL}://api-whs1${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.whs1.rule=Host(`whs1${DOMAIN}`)"
      - "traefik.http.middlewares.whs1-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.whs1-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.whs1-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.whs1-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.whs1-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.whs1.middlewares=whs1-headers"
      - "traefik.http.routers.whs1.entrypoints=web"
      - "traefik.http.routers.whs1.service=whs1"
      - "traefik.http.services.whs1.loadbalancer.server.port=8080"

      - "traefik.http.routers.whs1-swagger.rule=Host(`swagger-whs1${DOMAIN}`)"
      - "traefik.http.routers.whs1-swagger.entrypoints=web"
      - "traefik.http.routers.whs1-swagger.service=whs1-swagger"
      - "traefik.http.services.whs1-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.whs1-api.rule=Host(`api-whs1${DOMAIN}`)"
      - "traefik.http.routers.whs1-api.entrypoints=web"
      - "traefik.http.routers.whs1-api.service=whs1-api"
      - "traefik.http.services.whs1-api.loadbalancer.server.port=3001"
    volumes:
      - whs1_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.101

  whs-2:
    <<: *whs-def
    container_name: whs2
    hostname: whs2
    environment:
      ROLE: whs
      CREDENTIALS_FILE: whs-2.json
      SWAGGER_SERVER: ${PROTOCOL}://api-whs2${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.whs2.rule=Host(`whs2${DOMAIN}`)"
      - "traefik.http.middlewares.whs2-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.whs2-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.whs2-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.whs2-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.whs2-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.whs2.middlewares=whs2-headers"
      - "traefik.http.routers.whs2.entrypoints=web"
      - "traefik.http.routers.whs2.service=whs2"
      - "traefik.http.services.whs2.loadbalancer.server.port=8080"

      - "traefik.http.routers.whs2-swagger.rule=Host(`swagger-whs2${DOMAIN}`)"
      - "traefik.http.routers.whs2-swagger.entrypoints=web"
      - "traefik.http.routers.whs2-swagger.service=whs2-swagger"
      - "traefik.http.services.whs2-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.whs2-api.rule=Host(`api-whs2${DOMAIN}`)"
      - "traefik.http.routers.whs2-api.entrypoints=web"
      - "traefik.http.routers.whs2-api.service=whs2-api"
      - "traefik.http.services.whs2-api.loadbalancer.server.port=3001"
    volumes:
      - whs2_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.102
  whs-takeda:
    <<: *whs-def
    container_name: whs-takeda
    hostname: whs-takeda
    environment:
      ROLE: whs
      CREDENTIALS_FILE: whs-takeda.json
      SWAGGER_SERVER: ${PROTOCOL}://api-whs-takeda${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.whs-takeda.rule=Host(`whs-takeda${DOMAIN}`)"
      - "traefik.http.middlewares.whs-takeda-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.whs-takeda-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.whs-takeda-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.whs-takeda-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.whs-takeda-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.whs-takeda.middlewares=whs-takeda-headers"
      - "traefik.http.routers.whs-takeda.entrypoints=web"
      - "traefik.http.routers.whs-takeda.service=whs-takeda"
      - "traefik.http.services.whs-takeda.loadbalancer.server.port=8080"

      - "traefik.http.routers.whs-takeda-swagger.rule=Host(`swagger-whs-takeda${DOMAIN}`)"
      - "traefik.http.routers.whs-takeda-swagger.entrypoints=web"
      - "traefik.http.routers.whs-takeda-swagger.service=whs-takeda-swagger"
      - "traefik.http.services.whs-takeda-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.whs-takeda-api.rule=Host(`api-whs-takeda${DOMAIN}`)"
      - "traefik.http.routers.whs-takeda-api.entrypoints=web"
      - "traefik.http.routers.whs-takeda-api.service=whs-takeda-api"
      - "traefik.http.services.whs-takeda-api.loadbalancer.server.port=3001"
    volumes:
      - whs-takeda_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.103

  pha-1:
    << : *pha-def
    container_name: pha1
    hostname: pha1
    environment:
      ROLE: pha
      CREDENTIALS_FILE: pha-1.json
      SWAGGER_SERVER: ${PROTOCOL}://api-pha1${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.pha1.rule=Host(`pha1${DOMAIN}`)"
      - "traefik.http.middlewares.pha1-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.pha1-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.pha1-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.pha1-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.pha1-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.pha1.middlewares=pha1-headers"
      - "traefik.http.routers.pha1.entrypoints=web"
      - "traefik.http.routers.pha1.service=pha1"
      - "traefik.http.services.pha1.loadbalancer.server.port=8080"

      - "traefik.http.routers.pha1-swagger.rule=Host(`swagger-pha1${DOMAIN}`)"
      - "traefik.http.routers.pha1-swagger.entrypoints=web"
      - "traefik.http.routers.pha1-swagger.service=pha1-swagger"
      - "traefik.http.services.pha1-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.pha1-api.rule=Host(`api-pha1${DOMAIN}`)"
      - "traefik.http.routers.pha1-api.entrypoints=web"
      - "traefik.http.routers.pha1-api.service=pha1-api"
      - "traefik.http.services.pha1-api.loadbalancer.server.port=3002"
    volumes:
      - pha1_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.151
  pha-2:
    <<: *pha-def
    container_name: pha2
    hostname: pha2
    environment:
      ROLE: pha
      CREDENTIALS_FILE: pha-2.json
      SWAGGER_SERVER: ${PROTOCOL}://api-pha2${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.pha2.rule=Host(`pha2${DOMAIN}`)"
      - "traefik.http.middlewares.pha2-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.pha2-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.pha2-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.pha2-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.pha2-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.pha2.middlewares=pha2-headers"
      - "traefik.http.routers.pha2.entrypoints=web"
      - "traefik.http.routers.pha2.service=pha2"
      - "traefik.http.services.pha2.loadbalancer.server.port=8080"

      - "traefik.http.routers.pha2-swagger.rule=Host(`swagger-pha2${DOMAIN}`)"
      - "traefik.http.routers.pha2-swagger.entrypoints=web"
      - "traefik.http.routers.pha2-swagger.service=pha2-swagger"
      - "traefik.http.services.pha2-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.pha2-api.rule=Host(`api-pha2${DOMAIN}`)"
      - "traefik.http.routers.pha2-api.entrypoints=web"
      - "traefik.http.routers.pha2-api.service=pha2-api"
      - "traefik.http.services.pha2-api.loadbalancer.server.port=3002"
    volumes:
      - pha2_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.152
  pha-zuellig:
    <<: *pha-def
    container_name: pha-zuellig
    hostname: pha-zuellig
    environment:
      ROLE: pha
      CREDENTIALS_FILE: pha-zuellig.json
      SWAGGER_SERVER: ${PROTOCOL}://api-pha-zuellig${SWAGGER}/traceability
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.pha-zuellig.rule=Host(`pha-zuellig${DOMAIN}`)"
      - "traefik.http.middlewares.pha-zuellig-headers.headers.accessControlAllowOriginListRegex=.*"
      - "traefik.http.middlewares.pha-zuellig-headers.headers.accessControlAllowMethods=GET,OPTIONS,POST,PUT"
      - "traefik.http.middlewares.pha-zuellig-headers.headers.accessControlAllowHeaders=content-type,x-content-length"
      - "traefik.http.middlewares.pha-zuellig-headers.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.pha-zuellig-headers.headers.addVaryHeader=true"
      - "traefik.http.routers.pha-zuellig.middlewares=pha-zuellig-headers"
      - "traefik.http.routers.pha-zuellig.entrypoints=web"
      - "traefik.http.routers.pha-zuellig.service=pha-zuellig"
      - "traefik.http.services.pha-zuellig.loadbalancer.server.port=8080"

      - "traefik.http.routers.pha-zuellig-swagger.rule=Host(`swagger-pha-zuellig${DOMAIN}`)"
      - "traefik.http.routers.pha-zuellig-swagger.entrypoints=web"
      - "traefik.http.routers.pha-zuellig-swagger.service=pha-zuellig-swagger"
      - "traefik.http.services.pha-zuellig-swagger.loadbalancer.server.port=3009"

      - "traefik.http.routers.pha-zuellig-api.rule=Host(`api-pha-zuellig${DOMAIN}`)"
      - "traefik.http.routers.pha-zuellig-api.entrypoints=web"
      - "traefik.http.routers.pha-zuellig-api.service=pha-zuellig-api"
      - "traefik.http.services.pha-zuellig-api.loadbalancer.server.port=3002"
    volumes:
      - pha-zuellig_vol:/fgt-workspace/apihub-root/external-volume
    networks:
      traceability-net:
        ipv4_address: 172.16.63.153

networks:
  traceability-net:
    name: traceability-net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.63.0/24
          gateway: 172.16.63.1
volumes:
  "traceability_vol":
  "mah-roche_vol":
  "mah-bayer_vol":
  "mah-gsk_vol":
  "mah-novo-nordisk_vol":
  "mah-pfizer_vol":
  "mah-msd_vol":
  "mah-takeda_vol":
  "mah-sanofi_vol":
  "whs1_vol":
  "whs2_vol":
  "whs-takeda_vol":
  "pha1_vol":
  "pha2_vol":
  "pha-zuellig_vol":