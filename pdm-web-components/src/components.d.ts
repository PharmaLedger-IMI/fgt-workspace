/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface BarcodeGenerator {
        "data": any;
        /**
          * description: `This option allows to print the input data below the generated barcode.`, isMandatory: false, propertyType: `boolean`
         */
        "includeText": boolean;
        "scale"?: any;
        /**
          * description: `The size of the barcode in mm. Default is set to 32 mm.`, isMandatory: false, propertyType: `integer`
         */
        "size"?: any;
        /**
          * description: `A title that will be used for the current component instance.`, isMandatory: false, propertyType: `string`
         */
        "title": string;
        /**
          * description: `The barcode type. Accepted values are 'gs1datamatrix','datamatrix','qrcode', 'code128','code11','isbn'.`, isMandatory: true, propertyType: `string`
         */
        "type": string;
    }
    interface PdmIonTable {
        "setServiceProvider": (serviceProvider: Function) => Promise<void>;
        "tableTile": string;
    }
    interface ProductListItem {
    }
}
declare global {
    interface HTMLBarcodeGeneratorElement extends Components.BarcodeGenerator, HTMLStencilElement {
    }
    var HTMLBarcodeGeneratorElement: {
        prototype: HTMLBarcodeGeneratorElement;
        new (): HTMLBarcodeGeneratorElement;
    };
    interface HTMLPdmIonTableElement extends Components.PdmIonTable, HTMLStencilElement {
    }
    var HTMLPdmIonTableElement: {
        prototype: HTMLPdmIonTableElement;
        new (): HTMLPdmIonTableElement;
    };
    interface HTMLProductListItemElement extends Components.ProductListItem, HTMLStencilElement {
    }
    var HTMLProductListItemElement: {
        prototype: HTMLProductListItemElement;
        new (): HTMLProductListItemElement;
    };
    interface HTMLElementTagNameMap {
        "barcode-generator": HTMLBarcodeGeneratorElement;
        "pdm-ion-table": HTMLPdmIonTableElement;
        "product-list-item": HTMLProductListItemElement;
    }
}
declare namespace LocalJSX {
    interface BarcodeGenerator {
        "data"?: any;
        /**
          * description: `This option allows to print the input data below the generated barcode.`, isMandatory: false, propertyType: `boolean`
         */
        "includeText"?: boolean;
        "scale"?: any;
        /**
          * description: `The size of the barcode in mm. Default is set to 32 mm.`, isMandatory: false, propertyType: `integer`
         */
        "size"?: any;
        /**
          * description: `A title that will be used for the current component instance.`, isMandatory: false, propertyType: `string`
         */
        "title"?: string;
        /**
          * description: `The barcode type. Accepted values are 'gs1datamatrix','datamatrix','qrcode', 'code128','code11','isbn'.`, isMandatory: true, propertyType: `string`
         */
        "type"?: string;
    }
    interface PdmIonTable {
        "tableTile"?: string;
    }
    interface ProductListItem {
        /**
          * Through this event model is received (from webc-container, webc-for, webc-if or any component that supports a controller).
         */
        "onWebcardinal:model:get"?: (event: CustomEvent<any>) => void;
    }
    interface IntrinsicElements {
        "barcode-generator": BarcodeGenerator;
        "pdm-ion-table": PdmIonTable;
        "product-list-item": ProductListItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "barcode-generator": LocalJSX.BarcodeGenerator & JSXBase.HTMLAttributes<HTMLBarcodeGeneratorElement>;
            "pdm-ion-table": LocalJSX.PdmIonTable & JSXBase.HTMLAttributes<HTMLPdmIonTableElement>;
            "product-list-item": LocalJSX.ProductListItem & JSXBase.HTMLAttributes<HTMLProductListItemElement>;
        }
    }
}
